// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/product.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcProductServer {
  public static partial class ServeProduct
  {
    static readonly string __ServiceName = "product.ServeProduct";

    static readonly grpc::Marshaller<global::GrpcProductServer.ProductRequest> __Marshaller_product_ProductRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcProductServer.ProductRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcProductServer.ProductResponse> __Marshaller_product_ProductResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcProductServer.ProductResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcProductServer.AddProductRequest> __Marshaller_product_AddProductRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcProductServer.AddProductRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcProductServer.AddProductResponse> __Marshaller_product_AddProductResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcProductServer.AddProductResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::GrpcProductServer.ProductRequest, global::GrpcProductServer.ProductResponse> __Method_GetProduct = new grpc::Method<global::GrpcProductServer.ProductRequest, global::GrpcProductServer.ProductResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetProduct",
        __Marshaller_product_ProductRequest,
        __Marshaller_product_ProductResponse);

    static readonly grpc::Method<global::GrpcProductServer.AddProductRequest, global::GrpcProductServer.AddProductResponse> __Method_AddProduct = new grpc::Method<global::GrpcProductServer.AddProductRequest, global::GrpcProductServer.AddProductResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddProduct",
        __Marshaller_product_AddProductRequest,
        __Marshaller_product_AddProductResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcProductServer.ProductReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ServeProduct</summary>
    [grpc::BindServiceMethod(typeof(ServeProduct), "BindService")]
    public abstract partial class ServeProductBase
    {
      public virtual global::System.Threading.Tasks.Task<global::GrpcProductServer.ProductResponse> GetProduct(global::GrpcProductServer.ProductRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcProductServer.AddProductResponse> AddProduct(global::GrpcProductServer.AddProductRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(ServeProductBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetProduct, serviceImpl.GetProduct)
          .AddMethod(__Method_AddProduct, serviceImpl.AddProduct).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ServeProductBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetProduct, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcProductServer.ProductRequest, global::GrpcProductServer.ProductResponse>(serviceImpl.GetProduct));
      serviceBinder.AddMethod(__Method_AddProduct, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcProductServer.AddProductRequest, global::GrpcProductServer.AddProductResponse>(serviceImpl.AddProduct));
    }

  }
}
#endregion
